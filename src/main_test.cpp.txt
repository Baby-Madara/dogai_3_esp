#include <Arduino.h>

#include <WiFi.h>
#include <WebServer.h>

// Replace with your network credentials
const char *ssid = "Fr7oo";
const char *password = "25897463";







// Static IP configuration
IPAddress local_IP(192, 168, 81, 28);  // Set your desired static IP address
IPAddress gateway(192, 168, 1, 1);     // Set your network gateway
IPAddress subnet(255, 255, 255, 0);    // Set your subnet mask
IPAddress primaryDNS(8, 8, 8, 8);      // Optional: Set primary DNS server
IPAddress secondaryDNS(8, 8, 4, 4);    // Optional: Set secondary DNS server



// Set LED GPIO
const int ledPin = 2;

// Create a web server object that listens for HTTP request on port 80
WebServer server(80);

// HTML & CSS contents which display on web server
const char *htmlPage = "<html>\
                        <head>\
                          <title>ESP32 LED Control</title>\
                          <style>\
                            body { font-family: Arial; text-align: center; margin-top: 50px; }\
                            .button { padding: 15px 25px; font-size: 24px; color: white; background-color: #4CAF50; border: none; border-radius: 5px; cursor: pointer; }\
                            .button:disabled { background-color: #e7e7e7; color: #ccc; }\
                          </style>\
                        </head>\
                        <body>\
                          <h1>ESP32 LED Control</h1>\
                          <button class=\"button\" onclick=\"fetch('/led/on')\">LED ON</button>\
                          <button class=\"button\" onclick=\"fetch('/led/off')\">LED OFF</button>\
                        </body>\
                        </html>";

void setup()
{
    // Initialize the LED pin as an output
    pinMode(ledPin, OUTPUT);
    digitalWrite(ledPin, LOW);

    // Start the serial communication
    Serial.begin(115200);
    if (!WiFi.config(local_IP, gateway, subnet, primaryDNS, secondaryDNS))
    {
        Serial.println("STA Failed to configure");
    }
    // Connect to Wi-Fi
    WiFi.begin(ssid, password);
    Serial.print("Connecting to WiFi ..");
    while (WiFi.status() != WL_CONNECTED)
    {
        delay(1000);
        Serial.print('.');
    }
    Serial.println("Connected to WiFi");
    Serial.print("IP Address: ");
    Serial.println(WiFi.localIP());

    // Define routes
    server.on("/", HTTP_GET, []()
            {
                server.send(200, "text/html", htmlPage);
            });

    server.on("/led/on", HTTP_GET, []()
            {
                digitalWrite(ledPin, HIGH);
                server.send(200, "text/plain", "LED is ON");
            });

    server.on("/led/off", HTTP_GET, []()
            {
                digitalWrite(ledPin, LOW);
                server.send(200, "text/plain", "LED is OFF");
            });

    // Start the server
    server.begin();
    Serial.println("HTTP server started");
}

void loop()
{
    // Handle client requests
    server.handleClient();
}
